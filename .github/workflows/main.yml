# React-Redux App testing CI ... jobs: 1) greeting 2) testing 3) building & deployment project to GitHub Pages
# ----------------------------------------------------------------------------------

name: 1.React-Redux_App_Testing_CI
env:
  APPLICATION_NAME: 'React-Redux App testing CI'
  DEPLOY_PACKAGE_NAME: 'rap-v-${{ github.sha }}'

on:
  pull_request:
    branches: [ master ]

jobs:
  greeting:
    runs-on: ubuntu-latest
    
    if: github.actor == github.event.repository.owner.login

    steps:
      - name: Greeting
        run: |
          echo 'Hi guys ...'
          echo 'we just try to test our React-Redux-SPA ... ${{env.APPLICATION_NAME}}'
          echo 'with version: ${{env.DEPLOY_PACKAGE_NAME}}'
          echo 'we set action workflow with the watch event (PRESS STAR symbol to continue) & on each pull request, to have the both ways.'

  testing:
    runs-on: ubuntu-latest
    needs: [greeting]
    strategy:
      matrix:
        node-version: [13.x]
    steps:
      - name: Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        uses: actions/checkout@v2

      - name: Use Node.js version ... ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      # Install Packages (npm install) ... The project must have an existing package-lock.json or npm-shrinkwrap.json
      # npm install

      - name: Install Packages (npm ci) ... It will never write to package.json or any of the package-locks, installs are essentially frozen
        run: npm ci

      - name: Build project (if present)
        run: npm run build --if-present

      - name: List current folder
        run: ls -la

        env:
          CI: true
